services:
  # =============================================
  # MYSQL SERVICE - Stack MySQL
  # =============================================
  mysql:
    image: mysql:8.0
    container_name: internal-tools-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      # Script d'initialisation (structure + données)
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      # Persistance données (optionnelle pour dev)
      - mysql_data:/var/lib/mysql
    networks:
      - internal-tools-net
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - mysql
      - all

  # =============================================
  # PHPMYADMIN - Interface MySQL
  # =============================================  
  phpmyadmin:
    image: phpmyadmin:5.2
    container_name: internal-tools-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
      PMA_ARBITRARY: 1
    ports:
      - "${PHPMYADMIN_PORT}:80"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - internal-tools-net
    profiles:
      - mysql
      - all

  # =============================================
  # NGINX SERVEUR
  # =============================================
  nginx:
    image: nginx:alpine
    ports:
      - "8000:80"
    volumes:
      - ./api/:/var/www/html
      - .docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
    networks:
      - internal-tools-net

  # =============================================
  # PHP
  # =============================================
  php:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./api/:/var/www/html
    networks:
      - internal-tools-net

# =============================================
# VOLUMES & NETWORKS
# =============================================
volumes:
  mysql_data:
    driver: local

networks:
  internal-tools-net:
    driver: bridge
